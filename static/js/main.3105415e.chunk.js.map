{"version":3,"sources":["components/FetchData.js","components/poster/Poster.js","components/DisplayMovieData.js","components/Search.js","components/Navbar.js","Pages/Home.js","Pages/Movies.js","Pages/MoviePage.js","Pages/NotFound.js","App.js","index.js"],"names":["API_KEY","process","getData","query","type","url","axios","get","getPopular","a","getDataById","id","Poster","title","poster","overview","adult","release_date","className","src","alt","DisplayMovieData","data","map","movie","poster_path","to","pathname","state","Search","props","useState","searchValue","setSearchValue","handleSearch","e","preventDefault","then","response","newData","results","method","placeholder","value","onChange","target","onClick","Navbar","searchData","require","config","path","Home","movieData","setMovieData","numPages","setNumPages","useEffect","fetchData","console","log","Movies","imgUrl","MoviePage","match","params","res","catch","error","backdrop_path","runtime","NotFound","App","exact","component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.3105415e.chunk.js","sourcesContent":["import axios from \"axios\";\r\n\r\nlet API_KEY = process.env.REACT_APP_API_KEY;\r\n\r\nexport const getData = (query, type) => {\r\n   const url = `https://api.themoviedb.org/3/search/${type}/?api_key=${API_KEY}&query=${query}&language=en-US&page=1&include_adult=false`;\r\n   return axios.get(url);\r\n};\r\n\r\n// TODO Add page number\r\nexport const getPopular = async () => {\r\n   const url = `https://api.themoviedb.org/3/movie/popular?api_key=${API_KEY}&language=en-US&page=1&include_adult=false`;\r\n   return axios.get(url);\r\n};\r\n\r\nexport const getDataById = async (id, type) => {\r\n   const url = `https://api.themoviedb.org/3/${type}/${id}?api_key=${API_KEY}`;\r\n   return axios.get(url);\r\n};\r\n","import React from \"react\";\r\nimport \"./Poster.css\";\r\n\r\nfunction Poster({ title, poster, overview, adult, release_date }) {\r\n  return (\r\n    <div className=\"poster\">\r\n      <div className=\"backdrop\">\r\n        <img\r\n          className=\"poster-img\"\r\n          src={`https://image.tmdb.org/t/p/original${poster}`}\r\n          alt={title}\r\n        />\r\n      </div>\r\n      <div className=\"poster-data\">\r\n        <h1 className=\"poster-title\">{title}</h1>\r\n        <h3 className=\"poster-description\">{overview}</h3>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Poster;\r\n","import React from \"react\";\r\nimport Poster from \"./poster/Poster\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nfunction DisplayMovieData({ data }) {\r\n  return (\r\n    <div className=\"posters\">\r\n      {data ? (\r\n        <ul className=\"movie-list\">\r\n          {data.map((movie) => {\r\n            if (movie.poster_path)\r\n              return (\r\n                <Link\r\n                  className=\"poster\"\r\n                  key={movie.id}\r\n                  to={{\r\n                    pathname: `/movies/${movie.id}`,\r\n                    state: movie.id,\r\n                  }}\r\n                >\r\n                  <Poster\r\n                    title={movie.title}\r\n                    overview={movie.overview}\r\n                    adult={movie.adult}\r\n                    poster={movie.poster_path}\r\n                    release_date={movie.release_date}\r\n                  />\r\n                </Link>\r\n              );\r\n          })}\r\n        </ul>\r\n      ) : (\r\n        <div>Error Displaying Data</div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default DisplayMovieData;\r\n","import React, { useState } from \"react\";\r\nimport { getData } from \"./FetchData\";\r\n\r\nfunction Search(props) {\r\n   const [searchValue, setSearchValue] = useState(\"\");\r\n\r\n   const handleInputChange = (e) => {\r\n      e.preventDefault();\r\n      setSearchValue(e.target.value);\r\n   };\r\n\r\n   const handleSearch = async (e) => {\r\n      e.preventDefault();\r\n      await getData(searchValue, \"movie\").then((response) => {\r\n         props.newData(response.data.results);\r\n      });\r\n   };\r\n\r\n   return (\r\n      <form className=\"searchForm\" method=\"GET\">\r\n         <input\r\n            placeholder=\"Search for...\"\r\n            type=\"text\"\r\n            className=\"movie-search\"\r\n            value={searchValue}\r\n            onChange={handleInputChange}\r\n         />\r\n         <button className=\"btn\" type=\"submit\" onClick={handleSearch}>\r\n            <i className=\"fas fa-search\"></i>\r\n         </button>\r\n      </form>\r\n   );\r\n}\r\n\r\nexport default Search;\r\n\r\n// TODO - make sure the query is only readable text for api\r\n","import React from \"react\";\r\n\r\n// Components\r\nimport Search from \"./Search.js\";\r\n\r\nfunction Navbar(props) {\r\n   function updateData(data) {\r\n      props.searchData(data);\r\n   }\r\n   return (\r\n      <>\r\n         <nav>\r\n            <div className=\"navbar\">\r\n               <div className=\"logo\">\r\n                  <div to=\"/\">ENTERTAINMENT FINDER</div>\r\n               </div>\r\n               <Search newData={updateData} />\r\n            </div>\r\n         </nav>\r\n      </>\r\n   );\r\n}\r\n\r\nexport default Navbar;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { getPopular } from \"./../components/FetchData\";\r\nimport DisplayMovieData from \".././components/DisplayMovieData\";\r\nimport Navbar from \"./../components/Navbar\";\r\n\r\nrequire(\"dotenv\").config({ path: \"/../\" });\r\n\r\nfunction Home() {\r\n   const [movieData, setMovieData] = useState([]);\r\n   const [numPages, setNumPages] = useState([]);\r\n   useEffect(() => {\r\n      async function fetchData() {\r\n         setMovieData(\r\n            await getPopular().then((response) => response.data.results)\r\n         );\r\n      }\r\n      fetchData();\r\n   }, []);\r\n\r\n   const getSearchData = (data) => {\r\n      setMovieData(data);\r\n      setNumPages(data);\r\n      console.log(numPages);\r\n   };\r\n\r\n   return (\r\n      <>\r\n         <Navbar searchData={getSearchData} />\r\n         <DisplayMovieData data={movieData} />\r\n         <div className=\"page-buttons\">\r\n            <button className=\"btn\">Previous</button>\r\n            <button className=\"btn\">Next</button>\r\n         </div>\r\n      </>\r\n   );\r\n}\r\n\r\nexport default Home;\r\n\r\n// TODO - Add Next/Previous pages\r\n","import React from \"react\";\r\n\r\nfunction Movies() {\r\n   return <div></div>;\r\n}\r\n\r\nexport default Movies;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { getDataById } from \"./../components/FetchData\";\r\n\r\nconst imgUrl = \"https://image.tmdb.org/t/p/original\";\r\n\r\nfunction MoviePage({ match }) {\r\n   const [movieData, setMovieData] = useState();\r\n\r\n   useEffect(() => {\r\n      getDataById(match.params.id, \"movie\")\r\n         .then((res) => {\r\n            setMovieData(res.data);\r\n         })\r\n         .catch((error) => console.log(error));\r\n   }, []);\r\n\r\n   return (\r\n      <div className=\"movie-page\">\r\n         {movieData ? (\r\n            <>\r\n               <Link to=\"/\" className=\"back-arrow\">\r\n                  <i className=\"fas fa-arrow-left\"></i>\r\n                  Go Back\r\n               </Link>\r\n               <div className=\"backdrop backdrop-img\">\r\n                  {movieData.backdrop_path ? (\r\n                     <>\r\n                        <img\r\n                           src={`${imgUrl}${movieData.backdrop_path}`}\r\n                           alt={movieData.title}\r\n                           className=\"poster-img\"\r\n                        />\r\n                     </>\r\n                  ) : (\r\n                     <></>\r\n                  )}\r\n                  <div className=\"backdrop-overlay\"></div>\r\n               </div>\r\n               <div className=\"movie-page-data container\">\r\n                  <img\r\n                     className=\"movie-page-poster\"\r\n                     src={`${imgUrl}${movieData.poster_path}`}\r\n                     alt={movieData.title}\r\n                  />\r\n                  <div className=\"movie-page-content\">\r\n                     <h1 className=\"movie-page-title\">\r\n                        {movieData ? movieData.title : \"Loading Title\"}\r\n                     </h1>\r\n                     <hr />\r\n                     <div className=\"movie-page-overview\">\r\n                        <h2>Overview</h2>\r\n                        <p>{movieData.overview}</p>\r\n                        <h4>Runtime: {movieData.runtime} Minutes</h4>\r\n                     </div>\r\n                  </div>\r\n               </div>\r\n            </>\r\n         ) : (\r\n            <div className=\"loading\">Loading...</div>\r\n         )}\r\n      </div>\r\n   );\r\n}\r\n\r\nexport default MoviePage;\r\n\r\n// TODO: Update go back to include the search\r\n","import React from \"react\";\r\n\r\nfunction NotFound() {\r\n  return <div>404 NOT FOUND</div>;\r\n}\r\n\r\nexport default NotFound;\r\n","import \"./App.css\";\r\nimport React from \"react\";\r\nimport { HashRouter as Router, Route, Switch } from \"react-router-dom\";\r\n\r\n// Components\r\n\r\n// Pages\r\nimport Home from \"./Pages/Home\";\r\nimport Movies from \"./Pages/Movies\";\r\nimport MoviePage from \"./Pages/MoviePage\";\r\nimport NotFound from \"./Pages/NotFound\";\r\n\r\nfunction App() {\r\n   return (\r\n      <div className=\"App\">\r\n         <Router>\r\n            <Switch>\r\n               <Route exact path=\"/\" component={Home} />\r\n               <Route exact path=\"/movies\" component={Movies} />\r\n               <Route exact path=\"/movies/:id\" component={MoviePage} />\r\n               <Route exact path=\"/?search\" component={MoviePage} />\r\n               {/* Needs to be at bottom */}\r\n               <Route path=\"*\" component={NotFound} />\r\n            </Switch>\r\n         </Router>\r\n      </div>\r\n   );\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { HashRouter as Router } from \"react-router-dom\";\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(\r\n   <Router>\r\n      <App />\r\n   </Router>,\r\n   document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}